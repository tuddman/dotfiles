" Automatically install vim-plug and run PlugInstall if vim-plug not found
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall | source $MYVIMRC
endif

" Load plugins
" -------------
call plug#begin('~/.vim/plugged')

" Sensible defaults
Plug 'tpope/vim-sensible'

" Color schemes
" Plug 'chriskempson/base16-vim'
Plug 'lifepillar/vim-solarized8'

" Status line
" Plug 'itchyny/lightline.vim'
" Plug 'kchmck/vim-coffee-script'
Plug 'vim-airline/vim-airline'
Plug 'dense-analysis/ale'

" Git 
Plug 'tpope/vim-fugitive'
Plug 'jreybert/vimagit'
Plug 'Xuyuanp/nerdtree-git-plugin'

" " Autocomplete
" Plug 'ervandew/supertab'
" if has('nvim')
"   Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins'  }
"   Plug 'carlitux/deoplete-ternjs', { 'do': 'npm install -g tern' }"   Plug 'steelsojka/deoplete-flow'
" else
"   Plug 'Valloric/YouCompleteMe', { 'do': './install.py --tern-completer' }
" endif

" Extend vim commands
Plug 'tpope/vim-surround'
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-commentary'
Plug 'matze/vim-move'

" More text objects
Plug 'kana/vim-textobj-user'
Plug 'lucapette/vim-textobj-underscore' | Plug 'kana/vim-textobj-user'
Plug 'jceb/vim-textobj-uri'             | Plug 'kana/vim-textobj-user'
Plug 'kana/vim-textobj-indent'          | Plug 'kana/vim-textobj-user'
Plug 'kana/vim-textobj-line'            | Plug 'kana/vim-textobj-user'
Plug 'wellle/targets.vim'

" File browser
Plug 'scrooloose/nerdtree'

" Multiple cursors
Plug 'terryma/vim-multiple-cursors/'

" Graphical undo tree
Plug 'sjl/gundo.vim'

" Jump around file
Plug 'easymotion/vim-easymotion'

Plug 'ctrlpvim/ctrlp.vim'

" Fuzzy file finding
" NOTE requires additional setup
" https://github.com/wincent/command-t/blob/master/doc/command-t.txt
" Plug 'wincent/command-t/'
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'

" 'Interactive scratchpad for hackers'
" Plug 'metakirby5/codi.vim'

" Language Specific

" Clojure
" --------
Plug 'tpope/vim-salve'
Plug 'tpope/vim-fireplace'
Plug 'venantius/vim-cljfmt'
Plug 'guns/vim-clojure-static'
Plug 'guns/vim-clojure-highlight'
" Plug 'vim-scripts/paredit.vim'

" Elixir
" ------
Plug 'elixir-editors/vim-elixir'
Plug 'slashmili/alchemist.vim'

" HTML / CSS
" -----------
Plug 'mattn/emmet-vim'

" Javascript
" -----------
Plug 'jelera/vim-javascript-syntax'
Plug 'gavocanov/vim-js-indent'
Plug 'mxw/vim-jsx'
Plug 'isRuslan/vim-es6'
Plug 'elzr/vim-json'
Plug 'heavenshell/vim-jsdoc'
Plug 'prettier/vim-prettier', { 'do': 'yarn install' }


" Markdown
" -----
Plug 'iamcco/markdown-preview.nvim', { 'do': 'cd app & yarn install'  }


" Rust
" -----
Plug 'rust-lang/rust.vim'
Plug 'racer-rust/vim-racer'


" Terraform
" -----
Plug 'hashivim/vim-terraform'


call plug#end()
" End plugins
" ------------
